/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2024 Eric Gionet (gionet.c.eric@gmail.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * @file font8x8_latin.h
 * @defgroup drivers ssd1306
 * @{
 *
 * ESP-IDF driver for ssd1306 display panel
 *
 * Copyright (c) 2024 Eric Gionet (gionet.c.eric@gmail.com)
 *
 * MIT Licensed as described in the file LICENSE
 */

#ifndef __FONT8X8_LATIN_H__
#define __FONT8X8_LATIN_H__

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 
   Constant: font8x8_latin_tr
   Contains an 90 degree transposed 8x8 font map for unicode points 
   
   U+0000 - U+00FF (latin)
   
   To make it easy to use with SSD1306's GDDRAM mapping and API,
   this constant is an 90 degree transposed.
   The original version written by Marcel Sondaar is availble at:
   https://github.com/dhepper/font8x8/blob/master/font8x8_latin.h 

   Conversion is done via following procedure:
   
	for (int code = 0; code < 256; code++) {
		uint8_t trans[8];
		for (int w = 0; w < 8; w++) {
			trans[w] = 0x00;
			for (int b = 0; b < 8; b++) {
				trans[w] |= ((font8x8_latin[code][b] & (1 << w)) >> w) << b;
			}
		}
	
		for (int w = 0; w < 8; w++) {
			if (w == 0) { printf("    { "); }
			printf("0x%.2X", trans[w]);
			if (w < 7) { printf(", "); }
			if (w == 7) { printf(" },   // U+00%.2X (%c)\n", code, code); }
		}
	}
*/

/*
static const struct {
    unsigned int   width;
    unsigned int   height;
    unsigned int   bytes_per_pixel; // 3:RGB, 4:RGBA  
    char          *comment;
    unsigned char  pixel_data[8 * 8 * 3 + 1];
  } gimp_image = {
    8, 8, 3,
    "Created with GIMP",
    "\377\377\377\377\377\377\0\0\0\377\377\377\377\377\377\377\377\377\377\377"
    "\377\377\377\377\377\377\377\377\377\377\0\0\0\377\377\377\377\377\377\377"
    "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\0\0\0\377\377\377"
    "\0\0\0\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\0\0\0"
    "\0\0\0\377\377\377\0\0\0\377\377\377\377\377\377\377\377\377\377\377\377"
    "\0\0\0\377\377\377\377\377\377\377\377\377\0\0\0\377\377\377\377\377\377"
    "\377\377\377\0\0\0\377\377\377\377\377\377\377\377\377\0\0\0\377\377\377"
    "\377\377\377\377\377\377\0\0\0\377\377\377\377\377\377\0\0\0\377\377\377"
    "\377\377\377\377\377\377\377\377\377\0\0\0\0\0\0\0\0\0\0\0\0\377\377\377"
    "\377\377\377",
  };
*/

#define FONT_LATIN_8x8_COLS_SIZE  8    // number of columns for chars
#define FONT_LATIN_8x8_ROWS_SIZE  256  // number of rows for chars


// basic latin + control + extended latin

/**
 * @brief 8x8 latin font map with control and extended characters.  This
 *       font map is transposed 90 degrees for unicode points that are
 *       compatible with the SSD13xx display panel.
 */
static const uint8_t font_latin_8x8_tr[FONT_LATIN_8x8_ROWS_SIZE][FONT_LATIN_8x8_COLS_SIZE] = {
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0000 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0001 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0002 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0003 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0004 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0005 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0006 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0007 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0008 )
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0009 ( )
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+000A ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+000B ( )
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+000C ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+000D ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+000E ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+000F () 16
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0010 () 
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0011 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0012 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0013 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0014 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0015 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0016 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0017 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0018 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0019 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+001A ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+001B (
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+001C ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+001D ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+001E ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+001F ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0020 ( ) space
    { 0x00, 0x00, 0x06, 0x5F, 0x5F, 0x06, 0x00, 0x00 },   // U+0021 (!)
    { 0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00, 0x00 },   // U+0022 (")
    { 0x14, 0x7F, 0x7F, 0x14, 0x7F, 0x7F, 0x14, 0x00 },   // U+0023 (#)
    { 0x24, 0x2E, 0x6B, 0x6B, 0x3A, 0x12, 0x00, 0x00 },   // U+0024 ($)
    { 0x46, 0x66, 0x30, 0x18, 0x0C, 0x66, 0x62, 0x00 },   // U+0025 (%)
    { 0x30, 0x7A, 0x4F, 0x5D, 0x37, 0x7A, 0x48, 0x00 },   // U+0026 (&)
    { 0x04, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0027 (')
    { 0x00, 0x1C, 0x3E, 0x63, 0x41, 0x00, 0x00, 0x00 },   // U+0028 (()
    { 0x00, 0x41, 0x63, 0x3E, 0x1C, 0x00, 0x00, 0x00 },   // U+0029 ())
    { 0x08, 0x2A, 0x3E, 0x1C, 0x1C, 0x3E, 0x2A, 0x08 },   // U+002A (*)
    { 0x08, 0x08, 0x3E, 0x3E, 0x08, 0x08, 0x00, 0x00 },   // U+002B (+)
    { 0x00, 0x80, 0xE0, 0x60, 0x00, 0x00, 0x00, 0x00 },   // U+002C (,)
    { 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00 },   // U+002D (-)
    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00 },   // U+002E (.)
    { 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00 },   // U+002F (/)
    { 0x3E, 0x7F, 0x71, 0x59, 0x4D, 0x7F, 0x3E, 0x00 },   // U+0030 (0)
    { 0x40, 0x42, 0x7F, 0x7F, 0x40, 0x40, 0x00, 0x00 },   // U+0031 (1)
    { 0x62, 0x73, 0x59, 0x49, 0x6F, 0x66, 0x00, 0x00 },   // U+0032 (2)
    { 0x22, 0x63, 0x49, 0x49, 0x7F, 0x36, 0x00, 0x00 },   // U+0033 (3)
    { 0x18, 0x1C, 0x16, 0x53, 0x7F, 0x7F, 0x50, 0x00 },   // U+0034 (4)
    { 0x27, 0x67, 0x45, 0x45, 0x7D, 0x39, 0x00, 0x00 },   // U+0035 (5)
    { 0x3C, 0x7E, 0x4B, 0x49, 0x79, 0x30, 0x00, 0x00 },   // U+0036 (6)
    { 0x03, 0x03, 0x71, 0x79, 0x0F, 0x07, 0x00, 0x00 },   // U+0037 (7)
    { 0x36, 0x7F, 0x49, 0x49, 0x7F, 0x36, 0x00, 0x00 },   // U+0038 (8)
    { 0x06, 0x4F, 0x49, 0x69, 0x3F, 0x1E, 0x00, 0x00 },   // U+0039 (9)
    { 0x00, 0x00, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00 },   // U+003A (:)
    { 0x00, 0x80, 0xE6, 0x66, 0x00, 0x00, 0x00, 0x00 },   // U+003B (;)
    { 0x08, 0x1C, 0x36, 0x63, 0x41, 0x00, 0x00, 0x00 },   // U+003C (<)
    { 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00 },   // U+003D (=)
    { 0x00, 0x41, 0x63, 0x36, 0x1C, 0x08, 0x00, 0x00 },   // U+003E (>)
    { 0x02, 0x03, 0x51, 0x59, 0x0F, 0x06, 0x00, 0x00 },   // U+003F (?)
    { 0x3E, 0x7F, 0x41, 0x5D, 0x5D, 0x1F, 0x1E, 0x00 },   // U+0040 (@)
    { 0x7C, 0x7E, 0x13, 0x13, 0x7E, 0x7C, 0x00, 0x00 },   // U+0041 (A)
    { 0x41, 0x7F, 0x7F, 0x49, 0x49, 0x7F, 0x36, 0x00 },   // U+0042 (B)
    { 0x1C, 0x3E, 0x63, 0x41, 0x41, 0x63, 0x22, 0x00 },   // U+0043 (C)
    { 0x41, 0x7F, 0x7F, 0x41, 0x63, 0x3E, 0x1C, 0x00 },   // U+0044 (D)
    { 0x41, 0x7F, 0x7F, 0x49, 0x5D, 0x41, 0x63, 0x00 },   // U+0045 (E)
    { 0x41, 0x7F, 0x7F, 0x49, 0x1D, 0x01, 0x03, 0x00 },   // U+0046 (F)
    { 0x1C, 0x3E, 0x63, 0x41, 0x51, 0x73, 0x72, 0x00 },   // U+0047 (G)
    { 0x7F, 0x7F, 0x08, 0x08, 0x7F, 0x7F, 0x00, 0x00 },   // U+0048 (H)
    { 0x00, 0x41, 0x7F, 0x7F, 0x41, 0x00, 0x00, 0x00 },   // U+0049 (I)
    { 0x30, 0x70, 0x40, 0x41, 0x7F, 0x3F, 0x01, 0x00 },   // U+004A (J)
    { 0x41, 0x7F, 0x7F, 0x08, 0x1C, 0x77, 0x63, 0x00 },   // U+004B (K)
    { 0x41, 0x7F, 0x7F, 0x41, 0x40, 0x60, 0x70, 0x00 },   // U+004C (L)
    { 0x7F, 0x7F, 0x0E, 0x1C, 0x0E, 0x7F, 0x7F, 0x00 },   // U+004D (M)
    { 0x7F, 0x7F, 0x06, 0x0C, 0x18, 0x7F, 0x7F, 0x00 },   // U+004E (N)
    { 0x1C, 0x3E, 0x63, 0x41, 0x63, 0x3E, 0x1C, 0x00 },   // U+004F (O)
    { 0x41, 0x7F, 0x7F, 0x49, 0x09, 0x0F, 0x06, 0x00 },   // U+0050 (P)
    { 0x1E, 0x3F, 0x21, 0x71, 0x7F, 0x5E, 0x00, 0x00 },   // U+0051 (Q)
    { 0x41, 0x7F, 0x7F, 0x09, 0x19, 0x7F, 0x66, 0x00 },   // U+0052 (R)
    { 0x26, 0x6F, 0x4D, 0x59, 0x73, 0x32, 0x00, 0x00 },   // U+0053 (S)
    { 0x03, 0x41, 0x7F, 0x7F, 0x41, 0x03, 0x00, 0x00 },   // U+0054 (T)
    { 0x7F, 0x7F, 0x40, 0x40, 0x7F, 0x7F, 0x00, 0x00 },   // U+0055 (U)
    { 0x1F, 0x3F, 0x60, 0x60, 0x3F, 0x1F, 0x00, 0x00 },   // U+0056 (V)
    { 0x7F, 0x7F, 0x30, 0x18, 0x30, 0x7F, 0x7F, 0x00 },   // U+0057 (W)
    { 0x43, 0x67, 0x3C, 0x18, 0x3C, 0x67, 0x43, 0x00 },   // U+0058 (X)
    { 0x07, 0x4F, 0x78, 0x78, 0x4F, 0x07, 0x00, 0x00 },   // U+0059 (Y)
    { 0x47, 0x63, 0x71, 0x59, 0x4D, 0x67, 0x73, 0x00 },   // U+005A (Z)
    { 0x00, 0x7F, 0x7F, 0x41, 0x41, 0x00, 0x00, 0x00 },   // U+005B ([)
    { 0x01, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00 },   // U+005C (\)
    { 0x00, 0x41, 0x41, 0x7F, 0x7F, 0x00, 0x00, 0x00 },   // U+005D (])
    { 0x08, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x08, 0x00 },   // U+005E (^)
    { 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 },   // U+005F (_)
    { 0x00, 0x00, 0x03, 0x07, 0x04, 0x00, 0x00, 0x00 },   // U+0060 (`)
    { 0x20, 0x74, 0x54, 0x54, 0x3C, 0x78, 0x40, 0x00 },   // U+0061 (a)
    { 0x41, 0x7F, 0x3F, 0x48, 0x48, 0x78, 0x30, 0x00 },   // U+0062 (b)
    { 0x38, 0x7C, 0x44, 0x44, 0x6C, 0x28, 0x00, 0x00 },   // U+0063 (c)
    { 0x30, 0x78, 0x48, 0x49, 0x3F, 0x7F, 0x40, 0x00 },   // U+0064 (d)
    { 0x38, 0x7C, 0x54, 0x54, 0x5C, 0x18, 0x00, 0x00 },   // U+0065 (e)
    { 0x48, 0x7E, 0x7F, 0x49, 0x03, 0x02, 0x00, 0x00 },   // U+0066 (f)
    { 0x98, 0xBC, 0xA4, 0xA4, 0xF8, 0x7C, 0x04, 0x00 },   // U+0067 (g)
    { 0x41, 0x7F, 0x7F, 0x08, 0x04, 0x7C, 0x78, 0x00 },   // U+0068 (h)
    { 0x00, 0x44, 0x7D, 0x7D, 0x40, 0x00, 0x00, 0x00 },   // U+0069 (i)
    { 0x60, 0xE0, 0x80, 0x80, 0xFD, 0x7D, 0x00, 0x00 },   // U+006A (j)
    { 0x41, 0x7F, 0x7F, 0x10, 0x38, 0x6C, 0x44, 0x00 },   // U+006B (k)
    { 0x00, 0x41, 0x7F, 0x7F, 0x40, 0x00, 0x00, 0x00 },   // U+006C (l)
    { 0x7C, 0x7C, 0x18, 0x38, 0x1C, 0x7C, 0x78, 0x00 },   // U+006D (m)
    { 0x7C, 0x7C, 0x04, 0x04, 0x7C, 0x78, 0x00, 0x00 },   // U+006E (n)
    { 0x38, 0x7C, 0x44, 0x44, 0x7C, 0x38, 0x00, 0x00 },   // U+006F (o)
    { 0x84, 0xFC, 0xF8, 0xA4, 0x24, 0x3C, 0x18, 0x00 },   // U+0070 (p)
    { 0x18, 0x3C, 0x24, 0xA4, 0xF8, 0xFC, 0x84, 0x00 },   // U+0071 (q)
    { 0x44, 0x7C, 0x78, 0x4C, 0x04, 0x1C, 0x18, 0x00 },   // U+0072 (r)
    { 0x48, 0x5C, 0x54, 0x54, 0x74, 0x24, 0x00, 0x00 },   // U+0073 (s)
    { 0x00, 0x04, 0x3E, 0x7F, 0x44, 0x24, 0x00, 0x00 },   // U+0074 (t)
    { 0x3C, 0x7C, 0x40, 0x40, 0x3C, 0x7C, 0x40, 0x00 },   // U+0075 (u)
    { 0x1C, 0x3C, 0x60, 0x60, 0x3C, 0x1C, 0x00, 0x00 },   // U+0076 (v)
    { 0x3C, 0x7C, 0x70, 0x38, 0x70, 0x7C, 0x3C, 0x00 },   // U+0077 (w)
    { 0x44, 0x6C, 0x38, 0x10, 0x38, 0x6C, 0x44, 0x00 },   // U+0078 (x)
    { 0x9C, 0xBC, 0xA0, 0xA0, 0xFC, 0x7C, 0x00, 0x00 },   // U+0079 (y)
    { 0x4C, 0x64, 0x74, 0x5C, 0x4C, 0x64, 0x00, 0x00 },   // U+007A (z)
    { 0x08, 0x08, 0x3E, 0x77, 0x41, 0x41, 0x00, 0x00 },   // U+007B ({)
    { 0x00, 0x00, 0x00, 0x77, 0x77, 0x00, 0x00, 0x00 },   // U+007C (|)
    { 0x41, 0x41, 0x77, 0x3E, 0x08, 0x08, 0x00, 0x00 },   // U+007D (})
    { 0x02, 0x03, 0x01, 0x03, 0x02, 0x03, 0x01, 0x00 },   // U+007E (~)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+007F ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0080 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0081 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0082 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0083 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0084 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0085 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0086 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0087 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0088 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0089 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+008A ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+008B ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+008C ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+008D ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+008E ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+008F ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0090 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0091 () 
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0092 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0093 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0094 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0095 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0096 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0097 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0098 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+0099 ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+009A ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+009B (
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+009C ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+009D () ///
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+009E ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+009F ()
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+00A0 ()
    { 0x00, 0x00, 0x00, 0x7B, 0x7B, 0x00, 0x00, 0x00 },   // U+00A1 (¡)
    { 0x18, 0x3C, 0x24, 0xE7, 0xE7, 0x24, 0x24, 0x00 },   // U+00A2 (¢)
    { 0x68, 0x7E, 0x7F, 0x49, 0x43, 0x66, 0x20, 0x00 },   // U+00A3 (£)
    { 0x44, 0x7C, 0x38, 0x28, 0x38, 0x7C, 0x44, 0x00 },   // U+00A4 (¤)
    { 0x2B, 0x2F, 0xFC, 0xFC, 0x2F, 0x2B, 0x00, 0x00 },   // U+00A5 (¥)
    { 0x00, 0x00, 0x00, 0x77, 0x77, 0x00, 0x00, 0x00 },   // U+00A6 (¦)
    { 0x40, 0xDA, 0xBF, 0xA5, 0xFD, 0x59, 0x03, 0x02 },   // U+00A7 (§)
    { 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00 },   // U+00A8 (¨)
    { 0x3C, 0x42, 0x99, 0xA5, 0xA5, 0x81, 0x42, 0x3C },   // U+00A9 (©)
    { 0x00, 0x06, 0x0F, 0x09, 0x0F, 0x0F, 0x08, 0x00 },   // U+00AA (ª)
    { 0x08, 0x1C, 0x36, 0x22, 0x08, 0x1C, 0x36, 0x22 },   // U+00AB («)
    { 0x08, 0x08, 0x08, 0x08, 0x38, 0x38, 0x00, 0x00 },   // U+00AC (¬)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // U+00AD (­)
    { 0x3C, 0x42, 0xBD, 0x95, 0x95, 0xA9, 0x42, 0x3C },   // U+00AE (®)
    { 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00 },   // U+00AF (¯)
    { 0x00, 0x06, 0x0F, 0x09, 0x0F, 0x06, 0x00, 0x00 },   // U+00B0 (°)
    { 0x00, 0x44, 0x44, 0x5F, 0x5F, 0x44, 0x44, 0x00 },   // U+00B1 (±)
    { 0x00, 0x00, 0x19, 0x1D, 0x17, 0x12, 0x00, 0x00 },   // U+00B2 (²)
    { 0x00, 0x00, 0x11, 0x15, 0x1F, 0x0A, 0x00, 0x00 },   // U+00B3 (³)
    { 0x00, 0x00, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00 },   // U+00B4 (´)
    { 0x80, 0xFC, 0x7C, 0x20, 0x20, 0x3C, 0x1C, 0x00 },   // U+00B5 (µ)
    { 0x06, 0x0F, 0x09, 0x7F, 0x7F, 0x01, 0x7F, 0x7F },   // U+00B6 (¶)
    { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 },   // U+00B7 (·)
    { 0x00, 0x80, 0x80, 0xA0, 0xE0, 0x40, 0x00, 0x00 },   // U+00B8 (¸)
    { 0x00, 0x00, 0x0A, 0x0F, 0x08, 0x00, 0x00, 0x00 },   // U+00B9 (¹)
    { 0x00, 0x06, 0x0F, 0x09, 0x0F, 0x06, 0x00, 0x00 },   // U+00BA (º)
    { 0x22, 0x36, 0x1C, 0x08, 0x22, 0x36, 0x1C, 0x08 },   // U+00BB (»)
    { 0xCF, 0xE7, 0x38, 0x18, 0x6C, 0x7E, 0x73, 0x79 },   // U+00BC (¼)
    { 0x4F, 0x6F, 0x30, 0x18, 0xCC, 0xEE, 0xBB, 0x91 },   // U+00BD (½)
    { 0x15, 0x55, 0x6A, 0x30, 0x18, 0x6C, 0x56, 0xFA },   // U+00BE (¾)
    { 0x30, 0x78, 0x4D, 0x45, 0x60, 0x20, 0x00, 0x00 },   // U+00BF (¿)
    { 0x71, 0x79, 0x2D, 0x24, 0x2C, 0x78, 0x70, 0x00 },   // U+00C0 (À)
    { 0x70, 0x78, 0x2C, 0x24, 0x2D, 0x79, 0x71, 0x00 },   // U+00C1 (Á)
    { 0x70, 0x7A, 0x2B, 0x29, 0x2B, 0x7A, 0x70, 0x00 },   // U+00C2 (Â)
    { 0x72, 0x7B, 0x29, 0x2B, 0x2A, 0x7B, 0x71, 0x00 },   // U+00C3 (Ã)
    { 0x79, 0x7D, 0x16, 0x12, 0x16, 0x7D, 0x79, 0x00 },   // U+00C4 (Ä)
    { 0x70, 0x78, 0x2B, 0x2B, 0x78, 0x70, 0x00, 0x00 },   // U+00C5 (Å)
    { 0x7C, 0x7E, 0x0B, 0x09, 0x7F, 0x7F, 0x49, 0x00 },   // U+00C6 (Æ)
    { 0x0E, 0x9F, 0x91, 0xB1, 0xFB, 0x4A, 0x00, 0x00 },   // U+00C7 (Ç)
    { 0x45, 0x7D, 0x7D, 0x54, 0x54, 0x44, 0x00, 0x00 },   // U+00C8 (È)
    { 0x44, 0x7C, 0x7C, 0x55, 0x55, 0x45, 0x00, 0x00 },   // U+00C9 (É)
    { 0x44, 0x7E, 0x7D, 0x55, 0x56, 0x44, 0x00, 0x00 },   // U+00CA (Ê)
    { 0x44, 0x7D, 0x7D, 0x54, 0x55, 0x45, 0x00, 0x00 },   // U+00CB (Ë)
    { 0x01, 0x45, 0x7D, 0x7C, 0x44, 0x00, 0x00, 0x00 },   // U+00CC (Ì)
    { 0x00, 0x44, 0x7C, 0x7D, 0x45, 0x01, 0x00, 0x00 },   // U+00CD (Í)
    { 0x00, 0x4A, 0x79, 0x79, 0x4A, 0x00, 0x00, 0x00 },   // U+00CE (Î)
    { 0x01, 0x45, 0x7C, 0x7C, 0x45, 0x01, 0x00, 0x00 },   // U+00CF (Ï)
    { 0x4D, 0x7F, 0x7F, 0x4D, 0x41, 0x7F, 0x3E, 0x00 },   // U+00D0 (Ð)
    { 0x7D, 0x7D, 0x19, 0x31, 0x7D, 0x7D, 0x00, 0x00 },   // U+00D1 (Ñ)
    { 0x00, 0x11, 0x39, 0x6D, 0x6C, 0x38, 0x10, 0x00 },   // U+00D2 (Ò)
    { 0x00, 0x10, 0x38, 0x6C, 0x6D, 0x39, 0x11, 0x00 },   // U+00D3 (Ó)
    { 0x00, 0x12, 0x3B, 0x6D, 0x6D, 0x3B, 0x12, 0x00 },   // U+00D4 (Ô)
    { 0x32, 0x7B, 0x49, 0x4B, 0x4A, 0x7B, 0x31, 0x00 },   // U+00D5 (Õ)
    { 0x01, 0x19, 0x3C, 0x66, 0x66, 0x3C, 0x19, 0x01 },   // U+00D6 (Ö)
    { 0x00, 0x22, 0x36, 0x1C, 0x36, 0x22, 0x00, 0x00 },   // U+00D7 (×)
    { 0x5C, 0x3E, 0x73, 0x59, 0x6F, 0x3E, 0x1D, 0x00 },   // U+00D8 (Ø)
    { 0x00, 0x3D, 0x7D, 0x41, 0x40, 0x7C, 0x3C, 0x00 },   // U+00D9 (Ù)
    { 0x00, 0x3C, 0x7C, 0x40, 0x41, 0x7D, 0x3D, 0x00 },   // U+00DA (Ú)
    { 0x00, 0x3A, 0x7B, 0x41, 0x41, 0x7B, 0x3A, 0x00 },   // U+00DB (Û)
    { 0x3D, 0x7D, 0x40, 0x40, 0x7D, 0x3D, 0x00, 0x00 },   // U+00DC (Ü)
    { 0x00, 0x0C, 0x1C, 0x70, 0x71, 0x1D, 0x0D, 0x00 },   // U+00DD (Ý)
    { 0x81, 0xFF, 0xFF, 0xA5, 0x24, 0x3C, 0x18, 0x00 },   // U+00DE (Þ)
    { 0xFC, 0xFE, 0x2A, 0x2A, 0x3E, 0x14, 0x00, 0x00 },   // U+00DF (ß)
    { 0x21, 0x75, 0x55, 0x54, 0x7C, 0x78, 0x40, 0x00 },   // U+00E0 (à)
    { 0x20, 0x74, 0x54, 0x55, 0x7D, 0x79, 0x40, 0x00 },   // U+00E1 (á)
    { 0x02, 0x23, 0x75, 0x55, 0x55, 0x7D, 0x7B, 0x42 },   // U+00E2 (â)
    { 0x22, 0x77, 0x55, 0x57, 0x7E, 0x7B, 0x41, 0x00 },   // U+00E3 (ã)
    { 0x21, 0x75, 0x54, 0x54, 0x7D, 0x79, 0x40, 0x00 },   // U+00E4 (ä)
    { 0x20, 0x74, 0x57, 0x57, 0x7C, 0x78, 0x40, 0x00 },   // U+00E5 (å)
    { 0x20, 0x74, 0x54, 0x54, 0x7C, 0x7C, 0x54, 0x54 },   // U+00E6 (æ)
    { 0x18, 0x3C, 0xA4, 0xA4, 0xE4, 0x40, 0x00, 0x00 },   // U+00E7 (ç)
    { 0x39, 0x7D, 0x55, 0x54, 0x5C, 0x18, 0x00, 0x00 },   // U+00E8 (è)
    { 0x38, 0x7C, 0x54, 0x55, 0x5D, 0x19, 0x00, 0x00 },   // U+00E9 (é)
    { 0x02, 0x3B, 0x7D, 0x55, 0x55, 0x5D, 0x1B, 0x02 },   // U+00EA (ê)
    { 0x39, 0x7D, 0x54, 0x54, 0x5D, 0x19, 0x00, 0x00 },   // U+00EB (ë)
    { 0x01, 0x45, 0x7D, 0x7C, 0x40, 0x00, 0x00, 0x00 },   // U+00EC (ì)
    { 0x00, 0x44, 0x7D, 0x7D, 0x41, 0x00, 0x00, 0x00 },   // U+00ED (í)
    { 0x02, 0x03, 0x45, 0x7D, 0x7D, 0x43, 0x02, 0x00 },   // U+00EE (î)
    { 0x01, 0x45, 0x7C, 0x7C, 0x41, 0x01, 0x00, 0x00 },   // U+00EF (ï)
    { 0x25, 0x77, 0x52, 0x57, 0x7D, 0x38, 0x00, 0x00 },   // U+00F0 (ð)
    { 0x7A, 0x7A, 0x0A, 0x0A, 0x7A, 0x70, 0x00, 0x00 },   // U+00F1 (ñ)
    { 0x32, 0x7A, 0x4A, 0x48, 0x78, 0x30, 0x00, 0x00 },   // U+00F2 (ò)
    { 0x30, 0x78, 0x48, 0x4A, 0x7A, 0x32, 0x00, 0x00 },   // U+00F3 (ó)
    { 0x32, 0x7B, 0x49, 0x49, 0x7B, 0x32, 0x00, 0x00 },   // U+00F4 (ô)
    { 0x32, 0x7B, 0x49, 0x4B, 0x7A, 0x33, 0x01, 0x00 },   // U+00F5 (õ)
    { 0x32, 0x7A, 0x48, 0x48, 0x7A, 0x32, 0x00, 0x00 },   // U+00F6 (ö)
    { 0x00, 0x08, 0x08, 0x6B, 0x6B, 0x08, 0x08, 0x00 },   // U+00F7 (÷)
    { 0x00, 0xB8, 0xFC, 0x74, 0x5C, 0x7E, 0x3A, 0x00 },   // U+00F8 (ø)
    { 0x3A, 0x7A, 0x42, 0x40, 0x78, 0x78, 0x40, 0x00 },   // U+00F9 (ù)
    { 0x38, 0x78, 0x40, 0x42, 0x7A, 0x7A, 0x40, 0x00 },   // U+00FA (ú)
    { 0x3A, 0x7B, 0x41, 0x41, 0x7B, 0x7A, 0x40, 0x00 },   // U+00FB (û)
    { 0x3A, 0x7A, 0x40, 0x40, 0x7A, 0x7A, 0x40, 0x00 },   // U+00FC (ü)
    { 0x98, 0xB8, 0xA0, 0xA2, 0xFA, 0x7A, 0x00, 0x00 },   // U+00FD (ý)
    { 0x00, 0x7C, 0x7C, 0x28, 0x28, 0x38, 0x10, 0x00 },   // U+00FE (þ)
    { 0x9A, 0xBA, 0xA0, 0xA0, 0xFA, 0x7A, 0x00, 0x00 },   // U+00FF (ÿ)
};

#ifdef __cplusplus
}
#endif

/**@}*/

#endif /* __FONT8X8_LATIN_H__ */